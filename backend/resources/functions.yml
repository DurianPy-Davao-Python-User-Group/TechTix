# eventsUploadHandler:
#   handler: functions/events_upload_handler.handler
#   layers:
#     - { Ref: PythonRequirementsLambdaLayer }
#   events:
#     - s3:
#         bucket: ${self:custom.bucket}
#         event: s3:ObjectCreated:*
#         rules:
#           - prefix: events/
#         existing: true
#   iamRoleStatements:
#     - Effect: Allow
#       Action:
#         - "dynamodb:*"
#       Resource:
#         - { "Fn::GetAtt": [Entities, Arn] }

paymentHandler:
  handler: functions/payment_handling.handler
  layers:
    - { Ref: PythonRequirementsLambdaLayer }
  events:
    - sqs:
        arn:
          "Fn::GetAtt": [ PaymentQueue, Arn ]
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "sqs:*"
      Resource:
        - "Fn::GetAtt": [ PaymentQueue, Arn ]
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
      Resource: "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/staging-durianpy-events-registrations"

    - Effect: Allow
      Action:
        - "sqs:SendMessage"
      Resource: "arn:aws:sqs:${self:provider.region}:${aws:accountId}:staging-durianpy-events-email-queue.fifo"
